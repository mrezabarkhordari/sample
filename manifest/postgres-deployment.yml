apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: develop
  labels:
    app: postgres
    kind: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:12
        envFrom:
        - configMapRef:
            name: postgres-configmap
        - secretRef:
            name: postgres-secret
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume
      volumes:
      - name: postgres-volume
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: develop
  labels:
    app: postgres
    kind: service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
kind: PersistentVolume
metadata:
  name: nfs
  labels:
    kind: pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: nfs-server
    path: "/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: develop
  labels:
    kind: pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  namespace: develop
  labels:
    kind: configmap
data:
  POSTGRES_DB: php-db
  POSTGRES_HOST_AUTH_METHOD: trust
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: develop
  labels:
    kind: secret
type: Opaque
data:
  POSTGRES_USER: YWRtaW4=
  POSTGRES_PASSWORD: YWRtaW4=
